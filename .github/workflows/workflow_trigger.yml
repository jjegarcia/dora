name: Manually Triggered Workflow
on:
  workflow_dispatch:
env:
  PROJECT_ID: 'dora-450207' # TODO: update to your Google Cloud project ID
  GAR_NAME: 'cloud-run-source-deploy'
  REGION: 'poooo-central1' # TODO: update to your region
  SERVICE: 'cloud-run-source-deploy' # TODO: update to your service name
  WORKLOAD_IDENTITY_PROVIDER: '${{ secrets.DORA_NEW_SECRET }}' # TODO: update to your workload identity provider
  # DOCKER_TAG: us-central1-docker.pkg.dev/dora-450207/cloud-run-source-deploy:280f19ae91c7d61b2bd211d1529f094318108128

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
         
      # Configure Workload Identity Federation and generate an access token.
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.DORA_NEW_SECRET }}'

      # BEGIN - Docker auth and build
      #
      # If you already have a container image, you can omit these steps.
      - name: 'Docker Auth'
        # uses:  docker/login-action@v3
        # with:
        #   username: 'oauth2accesstoken'
        #   password: '${{ steps.auth.outputs.auth_token }}'
        #   registry: '${{ env.REGION }}-docker.pkg.dev'
        run: |-
          gcloud auth configure-docker '${{ env.GAR_NAME }}-docker-pkg.dev'

      - name: 'Build and Push Container'
        run: |-
          DOCKER_TAG="$${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"
          
      - name: 'Deploy to Cloud Run'

        # END - Docker auth and build

        uses:  google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          # NOTE: If using a pre-built image, update the image name below:

          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}'
      # If required, use the Cloud Run URL output in later steps
      - name: 'Show output'
        run: |2-

          echo ${{ steps.deploy.outputs.url }}
        
